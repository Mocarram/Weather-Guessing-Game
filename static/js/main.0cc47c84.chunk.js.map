{"version":3,"sources":["features/ScoreSlice.js","components/ScoreBoard.js","components/Footer.js","features/CitiesSlice.js","components/Result.js","components/Game.js","data/smartCities.js","components/Start.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["scoreSlice","createSlice","name","initialState","value","point","reducers","addScore","state","action","payload","resetScore","addPoint","resetPoint","actions","selectScores","scores","selectPoints","ScoreBoard","useSelector","className","map","score","i","result","title","city","guess","correct","Footer","href","target","rel","citiesSlice","addCity","resetCities","selectCities","cities","Result","dispatch","useDispatch","history","useHistory","useState","winOrLose","setwinOrLose","points","useEffect","onClick","push","Game","userGuess","setUserGuess","apiResult","setApiResult","cityTraverse","setCityTraverse","currentCity","setCurrentCity","showResult","setShowResult","disableCheck","setDisableCheck","gameSteps","setGameSteps","guessInputRef","useRef","current","focus","a","fetch","Name","response","json","data","Math","round","main","temp","console","log","length","replace","window","location","reload","Country","Time","onSubmit","e","preventDefault","type","onChange","parseInt","placeholder","ref","disabled","smartCities","Start","disableStart","setDisableStart","random","floor","slice","time","time_12","substr","to","App","basename","exact","path","store","configureStore","reducer","citiesReducer","scoreReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0cc47c84.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  value: [],\n  point: 0,\n};\n\nexport const scoreSlice = createSlice({\n  name: \"scores\",\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    addScore: (state, action) => {\n      state.value = [...state.value, action.payload];\n    },\n    resetScore: (state) => {\n      state.value = [];\n    },\n    addPoint: (state) => {\n      state.point += 1;\n    },\n    resetPoint: (state) => {\n      state.point = 0;\n    },\n  },\n});\n\nexport const { addScore, resetScore, addPoint, resetPoint } =\n  scoreSlice.actions;\n\nexport const selectScores = (state) => state.scores.value;\nexport const selectPoints = (state) => state.scores.point;\n\nexport default scoreSlice.reducer;\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectScores } from \"../features/ScoreSlice\";\r\nimport \"./ScoreBoard.css\";\r\n\r\nfunction ScoreBoard() {\r\n  const scores = useSelector(selectScores);\r\n\r\n  return (\r\n    <div className=\"scorecard\">\r\n      <h5>Guessed (G) and Correct (C) temperature</h5>\r\n      <div className=\"scores\">\r\n        {scores.map((score, i) => (\r\n          <div\r\n            key={i}\r\n            className={`single-score ${score.result ? \"green\" : \"red\"}`}\r\n            title={score.city}\r\n          >\r\n            <p className=\"city-name\">{score.city}</p>\r\n            <p className=\"guessed-score\">G: {score.guess}</p>\r\n            <p className=\"correct-score\">C: {score.correct}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScoreBoard;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer__container\">\r\n      <a\r\n        href=\"https://github.com/Mocarram/Weather-Guessing-Game\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        <button>Github</button>{\" \"}\r\n      </a>\r\n      <a\r\n        href=\"https://www.linkedin.com/in/mocarram-hossain-224980130/\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        <button>Connect</button>{\" \"}\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  value: [],\n};\n\nexport const citiesSlice = createSlice({\n  name: \"cities\",\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    addCity: (state, action) => {\n      state.value = [...state.value, action.payload];\n    },\n    resetCities: (state) => {\n      state.value = [];\n    },\n  },\n});\n\nexport const { addCity, resetCities } = citiesSlice.actions;\n\nexport const selectCities = (state) => state.cities.value;\n\nexport default citiesSlice.reducer;\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { resetPoint, resetScore, selectPoints } from \"../features/ScoreSlice\";\r\nimport ScoreBoard from \"./ScoreBoard\";\r\nimport \"./Result.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Footer from \"./Footer\";\r\nimport { resetCities } from \"../features/CitiesSlice\";\r\n\r\nfunction Result() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [winOrLose, setwinOrLose] = useState(\"lost\");\r\n  const points = useSelector(selectPoints);\r\n\r\n  const playAgain = () => {\r\n    // removes scores from redux\r\n    dispatch(resetScore());\r\n    // removes Points from redux\r\n    dispatch(resetPoint());\r\n\r\n    dispatch(resetCities());\r\n\r\n    // redirects to the start page\r\n    history.push(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (points >= 3) {\r\n      setwinOrLose(\"won\");\r\n    }\r\n  }, [points]);\r\n\r\n  return (\r\n    <div className=\"result-container\">\r\n      <section className=\"result__header\">\r\n        <h2 className={winOrLose === \"won\" ? \"won\" : \"lost\"}>\r\n          You {winOrLose}\r\n        </h2>\r\n        <p>Score: {points}/5</p>\r\n        {/* use useHistory to redirect and remove redux entries */}\r\n        <button onClick={playAgain}>Play Again</button>\r\n      </section>\r\n      <ScoreBoard />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Result from \"./Result\";\r\nimport \"./Game.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { addScore, addPoint } from \"../features/ScoreSlice.js\";\r\nimport { selectCities } from \"../features/CitiesSlice.js\";\r\nimport ScoreBoard from \"./ScoreBoard\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Game() {\r\n  const cities = useSelector(selectCities);\r\n  const dispatch = useDispatch();\r\n  const [userGuess, setUserGuess] = useState(\"\");\r\n  const [apiResult, setApiResult] = useState(\"\");\r\n  const [cityTraverse, setCityTraverse] = useState(1);\r\n  const [currentCity, setCurrentCity] = useState(cities[0]);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [disableCheck, setDisableCheck] = useState(false);\r\n  const [gameSteps, setGameSteps] = useState(1);\r\n  const guessInputRef = useRef(null);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    // Always autofocusing the input element\r\n    guessInputRef.current.focus();\r\n\r\n    // Enabling the \"check\" button on new city\r\n    setDisableCheck(false);\r\n\r\n    // Getting the temp for the current city on mount\r\n    (async () => {\r\n      const response = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${currentCity?.Name}&units=metric&appid=10a1b4375579c6a7e7dae0c9c610bf2a`\r\n      );\r\n      const data = await response.json();\r\n      setApiResult(Math.round(data?.main?.temp));\r\n    })();\r\n  }, [currentCity]);\r\n\r\n  console.log(apiResult);\r\n\r\n  const handleCheck = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Disabling the button until next city\r\n    setDisableCheck(true);\r\n\r\n    // Checking if the result is correct\r\n    if (userGuess >= apiResult - 5 && userGuess <= apiResult + 5) {\r\n      // Adding result to the store\r\n      dispatch(\r\n        addScore({\r\n          city: currentCity.Name,\r\n          guess: userGuess || \"N/A\",\r\n          correct: apiResult,\r\n          result: true,\r\n        })\r\n      );\r\n\r\n      // Adding +1 point\r\n      dispatch(addPoint());\r\n    } else {\r\n      // Adding result to the store\r\n      dispatch(\r\n        addScore({\r\n          city: currentCity.Name,\r\n          guess: userGuess || \"N/A\",\r\n          correct: apiResult,\r\n          result: false,\r\n        })\r\n      );\r\n    }\r\n\r\n    // Go next or publish result\r\n    if (cityTraverse < 5) {\r\n      // Go for the next city\r\n      setCityTraverse(cityTraverse + 1);\r\n      setCurrentCity(cities[cityTraverse]);\r\n      setGameSteps(gameSteps + 1);\r\n    } else {\r\n      // go to result publication\r\n      setShowResult(true);\r\n    }\r\n\r\n    // Reset user guess\r\n    setUserGuess(\"\");\r\n  };\r\n\r\n  if (!cities.length) {\r\n    // if cities array is empty\r\n    history.replace(\"/\");\r\n    // Reloading the page to skip errors\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"game__container\">\r\n        {showResult ? (\r\n          <Result />\r\n        ) : (\r\n          <>\r\n            <header>\r\n              <p className=\"steps\">{gameSteps}/5</p>\r\n              <h2 className=\"city\"> {currentCity.Name} </h2>\r\n              <h5 className=\"country\"> Country: {currentCity.Country} </h5>\r\n              <h5 className=\"time\">\r\n                It's about {currentCity.Time} in {currentCity.Name}\r\n              </h5>\r\n            </header>\r\n            <form className=\"input-form\" onSubmit={handleCheck}>\r\n              <input\r\n                value={userGuess}\r\n                type=\"number\"\r\n                onChange={(e) => setUserGuess(parseInt(e.target.value))}\r\n                placeholder=\"Temperature of this city in celsius?\"\r\n                ref={guessInputRef}\r\n              />\r\n              <button\r\n                className=\"check-button\"\r\n                type=\"submit\"\r\n                disabled={disableCheck}\r\n              >\r\n                Check\r\n              </button>\r\n            </form>\r\n\r\n            {gameSteps > 1 ? <ScoreBoard /> : \"\"}\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","const smartCities = [\r\n  {\r\n    Name: \"Birmingham\",\r\n    Country: \"United States\",\r\n  },\r\n  {\r\n    Name: \"Valladolid\",\r\n    Country: \"Spain\",\r\n  },\r\n  {\r\n    Name: \"Vigo\",\r\n    Country: \"Spain\",\r\n  },\r\n  {\r\n    Name: \"Sarajevo\",\r\n    Country: \"Bosnia and Herzegovina\",\r\n  },\r\n  {\r\n    Name: \"Bilbao\",\r\n    Country: \"Spain\",\r\n  },\r\n  {\r\n    Name: \"Wellington\",\r\n    Country: \"New Zealand\",\r\n  },\r\n  {\r\n    Name: \"Bern\",\r\n    Country: \"Switzerland\",\r\n  },\r\n  {\r\n    Name: \"Bratislava\",\r\n    Country: \"Slovakia\",\r\n  },\r\n  {\r\n    Name: \"Miami\",\r\n    Country: \"United States\",\r\n  },\r\n  {\r\n    Name: \"Murcia\",\r\n    Country: \"Spain\",\r\n  },\r\n  {\r\n    Name: \"Duisburg\",\r\n    Country: \"Germany\",\r\n  },\r\n  {\r\n    Name: \"Vilnius\",\r\n    Country: \"Lithuania\",\r\n  },\r\n  {\r\n    Name: \"Basel\",\r\n    Country: \"Switzerland\",\r\n  },\r\n  {\r\n    Name: \"Baltimore\",\r\n    Country: \"United States\",\r\n  },\r\n  {\r\n    Name: \"Skopje\",\r\n    Country: \"North Macedonia\",\r\n  },\r\n  {\r\n    Name: \"Geneva\",\r\n    Country: \"Switzerland\",\r\n  },\r\n  {\r\n    Name: \"Riga\",\r\n    Country: \"Latvia\",\r\n  },\r\n  {\r\n    Name: \"Stuttgart\",\r\n    Country: \"Germany\",\r\n  },\r\n  {\r\n    Name: \"Doha\",\r\n    Country: \"Qatar\",\r\n  },\r\n  {\r\n    Name: \"Manama\",\r\n    Country: \"Bahrain\",\r\n  },\r\n  {\r\n    Name: \"Zagreb\",\r\n    Country: \"Croatia\",\r\n  },\r\n  {\r\n    Name: \"Boston\",\r\n    Country: \"United States\",\r\n  },\r\n  {\r\n    Name: \"Seville\",\r\n    Country: \"Spain\",\r\n  },\r\n  {\r\n    Name: \"Florence\",\r\n    Country: \"Italy\",\r\n  },\r\n  {\r\n    Name: \"Washington\",\r\n    Country: \"United States\",\r\n  },\r\n  {\r\n    Name: \"Zaragoza\",\r\n    Country: \"Spain\",\r\n  },\r\n  {\r\n    Name: \"Frankfurt\",\r\n    Country: \"Germany\",\r\n  },\r\n  {\r\n    Name: \"Nottingham\",\r\n    Country: \"United Kingdom\",\r\n  },\r\n  {\r\n    Name: \"Valencia\",\r\n    Country: \"Spain\",\r\n  },\r\n  {\r\n    Name: \"San Francisco\",\r\n    Country: \"United States\",\r\n  },\r\n  {\r\n    Name: \"Liverpool\",\r\n    Country: \"United Kingdom\",\r\n  },\r\n  {\r\n    Name: \"Nice\",\r\n    Country: \"France\",\r\n  },\r\n  {\r\n    Name: \"Jerusalem\",\r\n    Country: \"Israel\",\r\n  },\r\n  {\r\n    Name: \"Antwerp\",\r\n    Country: \"Belgium\",\r\n  },\r\n  {\r\n    Name: \"Oslo\",\r\n    Country: \"Norway\",\r\n  },\r\n  {\r\n    Name: \"Lille\",\r\n    Country: \"France\",\r\n  },\r\n  {\r\n    Name: \"Tbilisi\",\r\n    Country: \"Georgia\",\r\n  },\r\n  {\r\n    Name: \"Cologne\",\r\n    Country: \"Germany\",\r\n  },\r\n  {\r\n    Name: \"Dublin\",\r\n    Country: \"Ireland\",\r\n  },\r\n  {\r\n    Name: \"Sofia\",\r\n    Country: \"Bulgaria\",\r\n  },\r\n  {\r\n    Name: \"Prague\",\r\n    Country: \"Czech Republic\",\r\n  },\r\n  {\r\n    Name: \"Porto\",\r\n    Country: \"Portugal\",\r\n  },\r\n  {\r\n    Name: \"Helsinki\",\r\n    Country: \"Finland\",\r\n  },\r\n  {\r\n    Name: \"Dallas\",\r\n    Country: \"United States\",\r\n  },\r\n  {\r\n    Name: \"Copenhagen\",\r\n    Country: \"Denmark\",\r\n  },\r\n  {\r\n    Name: \"Belgrade\",\r\n    Country: \"Serbia\",\r\n  },\r\n  {\r\n    Name: \"Zurich\",\r\n    Country: \"Switzerland\",\r\n  },\r\n  {\r\n    Name: \"Ottawa\",\r\n    Country: \"Canada\",\r\n  },\r\n  {\r\n    Name: \"San Diego\",\r\n    Country: \"United States\",\r\n  },\r\n  {\r\n    Name: \"Abu Dhabi\",\r\n    Country: \"United Arab Emirates\",\r\n  },\r\n  {\r\n    Name: \"Munich\",\r\n    Country: \"Germany\",\r\n  },\r\n  {\r\n    Name: \"Rosario\",\r\n    Country: \"Argentina\",\r\n  },\r\n  {\r\n    Name: \"San Antonio\",\r\n    Country: \"United States\",\r\n  },\r\n  {\r\n    Name: \"Cordoba\",\r\n    Country: \"Argentina\",\r\n  },\r\n  {\r\n    Name: \"Philadelphia\",\r\n    Country: \"United States\",\r\n  },\r\n  {\r\n    Name: \"Marseille\",\r\n    Country: \"France\",\r\n  },\r\n  {\r\n    Name: \"Stockholm\",\r\n    Country: \"Sweden\",\r\n  },\r\n  {\r\n    Name: \"Novosibirsk\",\r\n    Country: \"Russia\",\r\n  },\r\n  {\r\n    Name: \"Glasgow\",\r\n    Country: \"United Kingdom\",\r\n  },\r\n  {\r\n    Name: \"Lyon\",\r\n    Country: \"France\",\r\n  },\r\n  {\r\n    Name: \"Phoenix\",\r\n    Country: \"United States\",\r\n  },\r\n  {\r\n    Name: \"Santa Cruz\",\r\n    Country: \"Bolivia\",\r\n  },\r\n  {\r\n    Name: \"Montevideo\",\r\n    Country: \"Uruguay\",\r\n  },\r\n  {\r\n    Name: \"Budapest\",\r\n    Country: \"Hungary\",\r\n  },\r\n  {\r\n    Name: \"Hamburg\",\r\n    Country: \"Germany\",\r\n  },\r\n  {\r\n    Name: \"Warsaw\",\r\n    Country: \"Poland\",\r\n  },\r\n  {\r\n    Name: \"Turin\",\r\n    Country: \"Italy\",\r\n  },\r\n  {\r\n    Name: \"La Paz\",\r\n    Country: \"Bolivia\",\r\n  },\r\n  {\r\n    Name: \"Panama City\",\r\n    Country: \"Panama\",\r\n  },\r\n  {\r\n    Name: \"Quito\",\r\n    Country: \"Ecuador\",\r\n  },\r\n  {\r\n    Name: \"Rabat\",\r\n    Country: \"Morocco\",\r\n  },\r\n  {\r\n    Name: \"Almaty\",\r\n    Country: \"Kazakhstan\",\r\n  },\r\n  {\r\n    Name: \"Vienna\",\r\n    Country: \"Austria\",\r\n  },\r\n  {\r\n    Name: \"Minsk\",\r\n    Country: \"Belarus\",\r\n  },\r\n  {\r\n    Name: \"Brussels\",\r\n    Country: \"Belgium\",\r\n  },\r\n  {\r\n    Name: \"Amman\",\r\n    Country: \"Jordan\",\r\n  },\r\n  {\r\n    Name: \"Naples\",\r\n    Country: \"Italy\",\r\n  },\r\n  {\r\n    Name: \"Houston\",\r\n    Country: \"United States\",\r\n  },\r\n  {\r\n    Name: \"Baku\",\r\n    Country: \"Azerbaijan\",\r\n  },\r\n  {\r\n    Name: \"Tunis\",\r\n    Country: \"Tunisia\",\r\n  },\r\n  {\r\n    Name: \"Vancouver\",\r\n    Country: \"Canada\",\r\n  },\r\n  {\r\n    Name: \"Birmingham\",\r\n    Country: \"United Kingdom\",\r\n  },\r\n  {\r\n    Name: \"Chicago\",\r\n    Country: \"United States\",\r\n  },\r\n  {\r\n    Name: \"Manchester\",\r\n    Country: \"United Kingdom\",\r\n  },\r\n  {\r\n    Name: \"Cali\",\r\n    Country: \"Colombia\",\r\n  },\r\n  {\r\n    Name: \"Dubai\",\r\n    Country: \"United Arab Emirates\",\r\n  },\r\n  {\r\n    Name: \"Caracas\",\r\n    Country: \"Venezuela\",\r\n  },\r\n  {\r\n    Name: \"Guatemala City\",\r\n    Country: \"Guatemala\",\r\n  },\r\n  {\r\n    Name: \"Kiev\",\r\n    Country: \"Ukraine\",\r\n  },\r\n  {\r\n    Name: \"Guayaquil\",\r\n    Country: \"Ecuador\",\r\n  },\r\n  {\r\n    Name: \"Milan\",\r\n    Country: \"Italy\",\r\n  },\r\n  {\r\n    Name: \"Athens\",\r\n    Country: \"Greece\",\r\n  },\r\n  {\r\n    Name: \"Kuwait City\",\r\n    Country: \"Kuwait\",\r\n  },\r\n  {\r\n    Name: \"Santo Domingo\",\r\n    Country: \"Dominican Republic\",\r\n  },\r\n  {\r\n    Name: \"Berlin\",\r\n    Country: \"Germany\",\r\n  },\r\n  {\r\n    Name: \"Curitiba\",\r\n    Country: \"Brazil\",\r\n  },\r\n  {\r\n    Name: \"Douala\",\r\n    Country: \"Cameroon\",\r\n  },\r\n  {\r\n    Name: \"Casablanca\",\r\n    Country: \"Morocco\",\r\n  },\r\n  {\r\n    Name: \"Salvador\",\r\n    Country: \"Brazil\",\r\n  },\r\n  {\r\n    Name: \"Los Angeles\",\r\n    Country: \"United States\",\r\n  },\r\n  {\r\n    Name: \"Montreal\",\r\n    Country: \"Canada\",\r\n  },\r\n  {\r\n    Name: \"Tel Aviv\",\r\n    Country: \"Israel\",\r\n  },\r\n  {\r\n    Name: \"Rome\",\r\n    Country: \"Italy\",\r\n  },\r\n  {\r\n    Name: \"Cape Town\",\r\n    Country: \"South Africa\",\r\n  },\r\n  {\r\n    Name: \"Brasilia\",\r\n    Country: \"Brazil\",\r\n  },\r\n  {\r\n    Name: \"Nairobi\",\r\n    Country: \"Kenya\",\r\n  },\r\n  {\r\n    Name: \"Sydney\",\r\n    Country: \"Australia\",\r\n  },\r\n  {\r\n    Name: \"Melbourne\",\r\n    Country: \"Australia\",\r\n  },\r\n  {\r\n    Name: \"Ankara\",\r\n    Country: \"Turkey\",\r\n  },\r\n  {\r\n    Name: \"Saint Petersburg\",\r\n    Country: \"Russia\",\r\n  },\r\n  {\r\n    Name: \"Barcelona\",\r\n    Country: \"Spain\",\r\n  },\r\n  {\r\n    Name: \"Johannesburg\",\r\n    Country: \"South Africa\",\r\n  },\r\n  {\r\n    Name: \"Singapore\",\r\n    Country: \"Singapore\",\r\n  },\r\n  {\r\n    Name: \"Belo Horizonte\",\r\n    Country: \"Brazil\",\r\n  },\r\n  {\r\n    Name: \"Toronto\",\r\n    Country: \"Canada\",\r\n  },\r\n  {\r\n    Name: \"Madrid\",\r\n    Country: \"Spain\",\r\n  },\r\n  {\r\n    Name: \"Santiago\",\r\n    Country: \"Chile\",\r\n  },\r\n  {\r\n    Name: \"Riyadh\",\r\n    Country: \"Saudi Arabia\",\r\n  },\r\n  {\r\n    Name: \"Kuala Lumpur\",\r\n    Country: \"Malaysia\",\r\n  },\r\n  {\r\n    Name: \"New York City\",\r\n    Country: \"United States\",\r\n  },\r\n  {\r\n    Name: \"Ho Chi Minh City\",\r\n    Country: \"Vietnam\",\r\n  },\r\n  {\r\n    Name: \"London\",\r\n    Country: \"United Kingdom\",\r\n  },\r\n  {\r\n    Name: \"Nagoya\",\r\n    Country: \"Japan\",\r\n  },\r\n  {\r\n    Name: \"Seoul\",\r\n    Country: \"South Korea\",\r\n  },\r\n  {\r\n    Name: \"Bangkok\",\r\n    Country: \"Thailand\",\r\n  },\r\n  {\r\n    Name: \"Lima\",\r\n    Country: \"Peru\",\r\n  },\r\n  {\r\n    Name: \"Jakarta\",\r\n    Country: \"Indonesia\",\r\n  },\r\n  {\r\n    Name: \"Paris\",\r\n    Country: \"France\",\r\n  },\r\n  {\r\n    Name: \"Bogota\",\r\n    Country: \"Colombia\",\r\n  },\r\n  {\r\n    Name: \"Shenzhen\",\r\n    Country: \"China\",\r\n  },\r\n  {\r\n    Name: \"Moscow\",\r\n    Country: \"Russia\",\r\n  },\r\n  {\r\n    Name: \"Rio de Janeiro\",\r\n    Country: \"Brazil\",\r\n  },\r\n  {\r\n    Name: \"Guangzhou\",\r\n    Country: \"China\",\r\n  },\r\n  {\r\n    Name: \"Tianjin\",\r\n    Country: \"China\",\r\n  },\r\n  {\r\n    Name: \"Manila\",\r\n    Country: \"Philippines\",\r\n  },\r\n  {\r\n    Name: \"Lagos\",\r\n    Country: \"Nigeria\",\r\n  },\r\n  {\r\n    Name: \"Kolkata\",\r\n    Country: \"India\",\r\n  },\r\n  {\r\n    Name: \"Buenos Aires\",\r\n    Country: \"Argentina\",\r\n  },\r\n  {\r\n    Name: \"Istanbul\",\r\n    Country: \"Turkey\",\r\n  },\r\n  {\r\n    Name: \"Karachi\",\r\n    Country: \"Pakistan\",\r\n  },\r\n  {\r\n    Name: \"Osaka\",\r\n    Country: \"Japan\",\r\n  },\r\n  {\r\n    Name: \"Mumbai\",\r\n    Country: \"India\",\r\n  },\r\n  {\r\n    Name: \"Beijing\",\r\n    Country: \"China\",\r\n  },\r\n  {\r\n    Name: \"Cairo\",\r\n    Country: \"Egypt\",\r\n  },\r\n  {\r\n    Name: \"Mexico City\",\r\n    Country: \"Mexico\",\r\n  },\r\n  {\r\n    Name: \"Shanghai\",\r\n    Country: \"China\",\r\n  },\r\n  {\r\n    Name: \"Tokyo\",\r\n    Country: \"Japan\",\r\n  },\r\n];\r\n\r\nexport default smartCities;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Start.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport smartCities from \"../data/smartCities.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addCity } from \"../features/CitiesSlice\";\r\nimport Footer from \"./Footer\";\r\n\r\nfunction Start() {\r\n  const dispatch = useDispatch();\r\n  const [disableStart, setDisableStart] = useState(true);\r\n\r\n  // Adding 5 cities to the redux store on page load\r\n  useEffect(() => {\r\n    // get the cities and push them to redux store\r\n    const random = Math.floor(Math.random() * (smartCities.length - 5));\r\n    const cities = smartCities.slice(random, random + 5);\r\n\r\n    // console.log(random);\r\n\r\n    // Add times to the cities\r\n    // Add cities with time to the store\r\n    cities.map((city) =>\r\n      (async () => {\r\n        const response = await fetch(\r\n          `https://api.ipgeolocation.io/timezone?apiKey=c81f49ed724d4617ab2d6ce26a2a72b0&location=${city?.Name}`\r\n        );\r\n        const data = await response.json();\r\n        const time =\r\n          parseInt(data?.time_12.substr(0, 2)) + data?.time_12.substr(8, 12);\r\n        city.Time = time;\r\n        dispatch(addCity({ ...city }));\r\n        setDisableStart(false);\r\n      })()\r\n    );\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"start__container\">\r\n      <header className=\"start__header\">\r\n        <h2>Ready to guess temperature?</h2>\r\n        <span>Whenever you’re ready.</span>\r\n      </header>\r\n      <section className=\"start__button\">\r\n        <Link to=\"/game\">\r\n          <button\r\n            className={disableStart ? \"loading__state\" : \"\"}\r\n            disabled={disableStart}\r\n          >\r\n            {\" \"}\r\n            {disableStart ? \"loading...\" : \"Start\"}\r\n          </button>\r\n        </Link>\r\n      </section>\r\n      <section className=\"rules\">\r\n        <h3>Rules:</h3>\r\n        <ol>\r\n          <li>Guess temperature of the displayed city in celsius</li>\r\n          <li>A deviation of 5 will be considered correct</li>\r\n        </ol>\r\n      </section>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Start;\r\n","import React from \"react\";\nimport Game from \"./components/Game\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Start from \"./components/Start\";\nimport Result from \"./components/Result\";\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/result\">\n            <Result />\n          </Route>\n          <Route exact path=\"/game\">\n            <Game />\n          </Route>\n          <Route exact path=\"/\">\n            <Start />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport scoreReducer from \"../features/ScoreSlice\";\nimport citiesReducer from \"../features/CitiesSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    cities: citiesReducer,\n    scores: scoreReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}